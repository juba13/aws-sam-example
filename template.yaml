AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >
  sam-test-2

Parameters:
  Stage:
    Type: String
    Default: production
    Description: Stage to deploy resources to
    AllowedValues:
      - staging
      - production

Conditions:
  IsProduction: !Equals [ !Ref Stage, production ]

Globals:
  Api:
    OpenApiVersion: 3.0.1 
  Function:
    Runtime: nodejs14.x
    Architectures:
      - x86_64
    MemorySize: 128
    Timeout: 5
    Tracing: Active
    Tags:
      project: aws-sam-example  
      environment: !Ref Stage

Resources:
  ApiGwAccountConfig:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt "ApiGatewayLoggingRole.Arn"
      
  ApiGatewayLoggingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
        
  ModelsGatewayEndpoint:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "models-api-${Stage}"
      StageName: !Ref Stage
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*' # allows for logging on any resource
          HttpMethod: '*' # allows for logging on any method
      TracingEnabled: true
      Variables:
        LAMBDA_ALIAS: !Ref Stage
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          UsagePlanName: GatewayAuthorization


  ModelHandelerFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: dist/
      Handler: app.modelHandler
      Events:
        ModelPostAPI:
          Type: Api
          Properties:
            RestApiId: !Ref ModelsGatewayEndpoint
            Path: /model/{modelName}
            Method: POST
        ModelUpdateAPI:
          Type: Api
          Properties:
            RestApiId: !Ref ModelsGatewayEndpoint
            Path: /model/{modelName}
            Method: PUT
        ModelGetAPI:
          Type: Api
          Properties:
            RestApiId: !Ref ModelsGatewayEndpoint
            Path: /model/{modelName}/{modelId}
            Method: GET
        ModelDeleteAPI:
          Type: Api
          Properties:
            RestApiId: !Ref ModelsGatewayEndpoint
            Path: /model/{modelName}/{modelId}
            Method: DELETE
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref dynamodbPatientTable  

  # ApiKey:
  #     Type: 'AWS::ApiGateway::ApiKey'
  #     Properties:
  #       Description: CloudFormation API Key for testing
  #       Enabled: 'true'
  #       StageKeys:
  #         - RestApiId: !Ref ModelsGatewayEndpoint
  #           StageName: !Ref Stage
  # UsagePlan:
  #   Type: 'AWS::ApiGateway::UsagePlan'
  #   Properties:
  #     ApiStages:
  #       - ApiId: !Ref ModelsGatewayEndpoint
  #         Stage: !Ref Stage
  #     Description: Customer ABC's usage plan
  #     Quota:
  #       Limit: 5000
  #       Period: MONTH
  #     Throttle:
  #       BurstLimit: 200
  #       RateLimit: 100
  #     UsagePlanName: Test-User-Plan1
  # UsagePlanKey:
  #   Type: 'AWS::ApiGateway::UsagePlanKey'
  #   Properties:
  #     KeyId: !Ref ApiKey
  #     KeyType: API_KEY
  #     UsagePlanId: !Ref UsagePlan

  dynamodbPatientTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      TableName: dynamodbPatientTable                   
   
Outputs:
  ModelsGatewayEndpointId:
    Description: "ModelsGatewayEndpoint ID"
    Value: !Ref ModelsGatewayEndpoint

  ApiKey:
      Description: "You can find your API Key in the AWS console: (Put in the request HEADER as 'x-api-key')"
      Value: !Sub "https://console.aws.amazon.com/apigateway/home?region=${AWS::Region}#/api-keys/${ModelsGatewayEndpointApiKey}"

  ModelsGatewayEndpointUrl:
    Description: "ModelsGatewayEndpoint endpoint URL for"
    Value: !Sub 'https://${ModelsGatewayEndpoint}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/'

 